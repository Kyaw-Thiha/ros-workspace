services:
  ros:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    image: ros-kilted-dev:latest
    container_name: ros-kilted
    # user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    user: ubuntu
    working_dir: /work
    tty: true
    stdin_open: true
    # gpus: all
    environment:
      # Home & locale
      - HOME=/home/ubuntu
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
      # ROS niceties
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      # Wayland / XWayland
      - XDG_RUNTIME_DIR=/run/user/${USER_ID}
      - WAYLAND_DISPLAY=${WAYLAND_DISPLAY}
      - DISPLAY=${DISPLAY}                 # XWayland fallback
      - QT_QPA_PLATFORM=wayland            # switch to xcb if Wayland acts up
      - DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/${USER_ID}/bus
      # Kitty Term settings
      - TERM=${TERM}
      # Nvidia GPU
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics
      # Optional: put ROS logs somewhere neutral (keeps rviz happy even if HOME perms change)
      # - ROS_LOG_DIR=/tmp/ros_log
    volumes:
      # Your code
      - ./:/work
      # A writable home for the "dev" user
      - devhome:/home/ubuntu
      # Wayland socket & session bus
      - /run/user/${USER_ID}:/run/user/${USER_ID}
      # XWayland socket (fallback)
      - /tmp/.X11-unix:/tmp/.X11-unix
      # (Optional, stricter X auth setups)
      # - ${XAUTHORITY:-$HOME/.Xauthority}:/home/ubuntu/.Xauthority:ro
      # Neovim config + caches (so nvim feels native & fast)
      - ~/.config/nvim:/home/ubuntu/.config/nvim:ro
      - ~/.local/share/nvim:/home/ubuntu/.local/share/nvim
      - ~/.cache/nvim:/home/ubuntu/.cache/nvim
      - ~/.local/state:/home/ubuntu/.local/state
      # Optional: tool caches
      - ~/.cache/pip:/home/ubuntu/.cache/pip
      - ~/.cache/clangd:/home/ubuntu/.cache/clangd
      - ~/.cache/colcon:/home/ubuntu/.cache/colcon
      - ~/.config/lazygit:/home/ubuntu/.config/lazygit
      # zsh dotfiles (mount what you use)
      - ~/.zshrc:/home/ubuntu/.zshrc
      - ~/.zprofile:/home/ubuntu/.zprofile
      - ~/.zshenv:/home/ubuntu/.zshenv
      # Optional: oh-my-zsh / zinit / powerlevel10k
      - ~/.oh-my-zsh:/home/ubuntu/.oh-my-zsh
      - ~/.p10k.zsh:/home/ubuntu/.p10k.zsh
      # use a bind mount for home
      # - ~/docker-ros-home:/home/dev
      # SSH 
      - ~/.ssh:/home/ubuntu/.ssh:ro
      - ~/.gitconfig:/home/ubuntu/.gitconfig:ro
    devices:
      - /dev/dri:/dev/dri       # GPU (Intel/AMD Mesa)
    group_add:
      - "video"
    # NVIDIA: ensure nvidia-container-toolkit is installed on host:
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    # entrypoint: ["/usr/local/bin/entrypoint.sh"]

    # Expose Foxglove Bridge (WebSocket) to host
    ports:
      - "8765:8765"   # foxglove_bridge default port

volumes:
  devhome: {}
